{"version":3,"sources":["components/LinkTo.js","components/SubmitButton.js","components/AddBookForm.js","components/AddBook.js","components/AppLogo.js","components/AppHeader.js","components/Book.js","components/BookListCompleted.js","components/BookListUncompleted.js","components/SearchBar.js","components/BookShelf.js","components/EditBookForm.js","components/EditBook.js","components/Footer.js","components/App.js","index.js"],"names":["LinkTo","props","className","to","innerText","SubmitButton","type","id","value","AddBookForm","useState","book","setBook","handleInputChange","event","name","target","checked","setChecked","useEffect","localStorage","setItem","JSON","stringify","books","console","log","onSubmit","preventDefault","addBook","htmlFor","title","onChange","required","author","year","AddBook","AppLogo","AppHeader","Book","navigate","useHistory","navigateToEditBook","push","bookTitle","onClick","editBook","bookAuthor","bookYear","isComplete","toggleIsComplete","deleteBook","BookListCompleted","style","backgroundColor","map","BookListUncompleted","SearchBar","placeholder","BookShelf","EditBookForm","currentBook","updateBook","EditBook","Footer","href","App","parse","getItem","setBooks","setCurrentBook","exact","path","filter","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f3cf3a1.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\"\r\n\r\nfunction LinkTo(props) {\r\n  return (\r\n    <div className=\"LinkTo\">\r\n      <Link to={props.to} className={props.className}>{props.innerText}</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LinkTo","function SubmitButton(props) {\r\n  return (\r\n    <div className=\"SubmitButton center\">\r\n      <input \r\n        type=\"submit\" \r\n        id=\"submit\"\r\n        className={props.className}\r\n        value={props.value}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SubmitButton","import { useState, useEffect } from \"react\"\r\nimport LinkTo from \"./LinkTo\"\r\nimport SubmitButton from \"./SubmitButton\"\r\n\r\nfunction AddBookForm(props) {\r\n  // Setting state\r\n  const [book, setBook] = useState({})    \r\n\r\n  // handle inputs change\r\n  const handleInputChange = (event) => {\r\n    const name = event.target.name\r\n    const value = event.target.value\r\n    const checked = event.target.checked\r\n\r\n    setBook({...book, [name]: value})\r\n    props.setChecked(checked)\r\n  }\r\n\r\n  // handle submit \r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n\r\n    props.addBook(book)\r\n  }\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"books_data\", JSON.stringify(props.books))\r\n    console.log(props.books)\r\n  }, [props.books])\r\n\r\n  return (\r\n    <form className=\"AddBookForm\" onSubmit={handleSubmit}>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"inputForJudulBuku\">Judul Buku</label>\r\n        <input \r\n          type=\"text\"\r\n          id=\"titleBook\"\r\n          name=\"title\"\r\n          value={book.title || \"\"}\r\n          onChange={handleInputChange}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"inputForPenulis\">Penulis</label>\r\n        <input \r\n          type=\"text\"\r\n          id=\"author\"\r\n          name=\"author\"\r\n          value={book.author || \"\"}\r\n          onChange={handleInputChange}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"inputForTahun\">Tahun</label>\r\n        <input \r\n          type=\"number\"\r\n          id=\"year\"\r\n          name=\"year\"\r\n          value={book.year || \"\"}\r\n          onChange={handleInputChange}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"selesaiDibaca\">Selesai dibaca</label>\r\n        <input \r\n          type=\"checkbox\" \r\n          id=\"completeCheckbox\" \r\n          name=\"isComplete\"\r\n          checked={props.checked}\r\n          onChange={handleInputChange}\r\n        />\r\n      </div>\r\n      <div className=\"flex jcc\">\r\n        <SubmitButton \r\n          value=\"Tambah Buku Baru\" \r\n          className=\"m-10\"\r\n        />\r\n        <LinkTo \r\n          to=\"/\" \r\n          innerText=\"Kembali\" \r\n          className=\"cancel m-10\"\r\n        />\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default AddBookForm","import AddBookForm from \"./AddBookForm\"\r\n\r\nfunction AddBook(props) {\r\n  return (\r\n      <div className=\"form-container card shadow-dark container\">\r\n        <h1 className=\"heading\">TAMBAH BUKU</h1>\r\n        <AddBookForm \r\n          books={props.books}\r\n          checked={props.checked}\r\n          setChecked={props.setChecked}\r\n          addBook={props.addBook}\r\n        />\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default AddBook","import { Link } from \"react-router-dom\"\r\n\r\nfunction AppLogo() {\r\n  return (\r\n    <div className=\"App-logo\">\r\n      <h1><Link to=\"/\">BOOKSHELF</Link></h1> \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AppLogo","import AppLogo from \"./AppLogo\"\r\n\r\nfunction AppHeader() {\r\n  return (\r\n    <div className=\"AppHeader\">\r\n      <div className=\"container\">\r\n        <div className=\"AppHeader-logo\">\r\n          <AppLogo />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AppHeader","import { useHistory } from \"react-router-dom\"\r\n\r\nfunction Book(props) {\r\n  let navigate = useHistory()\r\n  \r\n  const navigateToEditBook = () => {\r\n    navigate.push(\"/editbook\")\r\n  }\r\n\r\n  return (\r\n    <li className=\"Book shadow\">\r\n      <div className=\"Book-header\">\r\n        <h4>{props.bookTitle}</h4>\r\n        {/* <button onClick={() => navigate(\"/EditBook\")}>Edit</button> */}\r\n        <button onClick={() => props.editBook(props.book, navigateToEditBook)}>Edit</button>\r\n      </div>\r\n      <div className=\"Book-info\">\r\n        <p>Penulis : {props.bookAuthor}</p>\r\n        <p>Tahun : {props.bookYear}</p>\r\n      </div>\r\n      <div className=\"Book-button center\">\r\n        {props.isComplete ? \r\n          <button \r\n            className=\"complete-button\" \r\n            onClick={() => props.toggleIsComplete(props.id, props.isComplete)}>\r\n              Belum Selesai\r\n          </button>\r\n          : \r\n          <button \r\n            className=\"complete-button\" \r\n            onClick={() => props.toggleIsComplete(props.id, props.isComplete)}>\r\n              Selesai\r\n          </button> \r\n        }\r\n        <button \r\n          className=\"delete-button\"\r\n          onClick={() => props.deleteBook(props.id)}>\r\n            Hapus\r\n        </button>\r\n      </div>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Book ","import Book from \"./Book\"\r\n\r\nfunction BookListCompleted(props) {\r\n  const bgColor = {\r\n    backgroundColor: \"#FFEFA1\"\r\n  }\r\n\r\n  return (\r\n    <div className=\"BookList-container card\" style={bgColor}>\r\n      <h3>Selesai Dibaca</h3> \r\n      <ul id=\"completed\" className=\"BookList\">\r\n        {props.books.map(book => {\r\n          return (\r\n            book.isComplete &&\r\n              <Book \r\n                book={book}\r\n                key={book.id}\r\n                id={book.id}\r\n                bookTitle={book.title} \r\n                bookAuthor={book.author}\r\n                bookYear={book.year}\r\n                isComplete={book.isComplete}\r\n                toggleIsComplete={props.toggleIsComplete}\r\n                deleteBook={props.deleteBook}\r\n                editBook={props.editBook}\r\n              />\r\n            )\r\n          })\r\n        }\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BookListCompleted","// import { useEffect, useState } from \"react\"\r\nimport Book from \"./Book\"\r\n\r\nfunction BookListUncompleted(props) {\r\n  const bgColor = {\r\n    backgroundColor: \"#FFCB91\"\r\n  }\r\n  \r\n  return (\r\n    <div className=\"BookList-container card\" style={bgColor}>\r\n      <h3>Belum Selesai Dibaca</h3> \r\n      <ul id=\"uncompleted\" className=\"BookList\">\r\n        {props.books.map(book => {\r\n          return (\r\n            !book.isComplete &&\r\n              <Book \r\n                book={book}\r\n                key={book.id}\r\n                id={book.id}\r\n                bookTitle={book.title} \r\n                bookAuthor={book.author}\r\n                bookYear={book.year}\r\n                isComplete={book.isComplete}\r\n                toggleIsComplete={props.toggleIsComplete}\r\n                deleteBook={props.deleteBook}\r\n                editBook={props.editBook}\r\n              />\r\n            )\r\n          })\r\n        }\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BookListUncompleted","function SearchBar() {\r\n  return (\r\n    <div className=\"SearchBar\">\r\n      <input \r\n        type=\"search\" \r\n        id=\"inputSearch\"\r\n        placeholder=\"Cari Buku..\"\r\n        // onKeyUp=\"btnSearchClicked()\"\r\n      />\r\n    </div> \r\n  )\r\n}\r\n\r\nexport default SearchBar","import BookListCompleted from \"./BookListCompleted\"\r\nimport BookListUncompleted from \"./BookListUncompleted\"\r\nimport LinkTo from \"./LinkTo\"\r\nimport SearchBar from \"./SearchBar\"\r\n\r\nfunction BookShelf(props) {\r\n  return (\r\n    <div className=\"BookShelf card shadow-dark container\">\r\n      \r\n        <h1 className=\"heading\">RAK BUKU</h1>\r\n      \r\n      <div className=\"flex jcsb\">\r\n        <SearchBar />\r\n        <LinkTo \r\n          to=\"/addbook\"\r\n          innerText=\"Tambah Buku\" \r\n          className=\"add\"\r\n        />\r\n      </div>\r\n      <BookListUncompleted \r\n        books={props.books} \r\n        toggleIsComplete={props.toggleIsComplete}\r\n        deleteBook={props.deleteBook}\r\n        editBook={props.editBook}\r\n      />\r\n      <BookListCompleted \r\n        books={props.books} \r\n        toggleIsComplete={props.toggleIsComplete}\r\n        deleteBook={props.deleteBook}\r\n        editBook={props.editBook}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BookShelf","import { useHistory } from \"react-router-dom\"\r\nimport { useState } from \"react/cjs/react.development\"\r\nimport LinkTo from \"./LinkTo\"\r\nimport SubmitButton from \"./SubmitButton\"\r\n\r\nfunction EditBookForm(props) {\r\n  let navigate = useHistory()\r\n  \r\n  const [book, setBook] = useState(props.currentBook)\r\n\r\n  const handleInputChange = (event) => {\r\n    const {name, value} = event.target\r\n\r\n    setBook({...book, [name]: value})\r\n  }\r\n  \r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n\r\n    props.updateBook(book.id, book)\r\n    navigate.push(\"/\")\r\n  }\r\n\r\n  return (\r\n    <form className=\"AddBookForm\" onSubmit={handleSubmit}>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"inputForJudulBuku\">Judul Buku</label>\r\n        <input \r\n          type=\"text\"\r\n          id=\"titleBook\"\r\n          name=\"title\"\r\n          value={book.title}\r\n          onChange={handleInputChange}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"inputForPenulis\">Penulis</label>\r\n        <input \r\n          type=\"text\"\r\n          id=\"author\"\r\n          name=\"author\"\r\n          value={book.author}\r\n          onChange={handleInputChange}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"inputForTahun\">Tahun</label>\r\n        <input \r\n          type=\"number\"\r\n          id=\"year\"\r\n          name=\"year\"\r\n          value={book.year}\r\n          onChange={handleInputChange}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"selesaiDibaca\">Selesai dibaca</label>\r\n        <input \r\n          type=\"checkbox\" \r\n          id=\"completeCheckbox\" \r\n          name=\"isComplete\"\r\n          checked={book.isComplete}\r\n          onChange={handleInputChange}\r\n        />\r\n      </div>\r\n      <div className=\"flex jcc\">\r\n        <SubmitButton \r\n          value=\"Update Buku\" \r\n          className=\"m-10\"\r\n        />\r\n        <LinkTo \r\n          to=\"/\" \r\n          innerText=\"Kembali\" \r\n          className=\"cancel m-10\"\r\n        />\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default EditBookForm","import EditBookForm from \"./EditBookForm\"\r\n\r\nfunction EditBook(props) {\r\n  return (\r\n      <div className=\"form-container card shadow-dark container\">\r\n        <h1 className=\"heading\">EDIT BUKU</h1>\r\n        <EditBookForm \r\n          currentBook={props.currentBook}\r\n          updateBook={props.updateBook}\r\n        />\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default EditBook","function Footer() {\r\n  return (\r\n    <div className=\"center\">\r\n      <p>Design and Coded by <a href=\"https://nfathan.github.io/fathan-nasrullah/\">Fathan Nasrullah</a></p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer ","import { useEffect, useState } from \"react\"\nimport { \n  BrowserRouter, \n  Switch, \n  Route } from \"react-router-dom\";\nimport '../App.scss';\nimport AddBook from './AddBook';\nimport AppHeader from './AppHeader';\nimport BookShelf from './BookShelf';\nimport EditBook from \"./EditBook\";\nimport Footer from \"./Footer\";\n\nfunction App() {\n  // Setting state (shared state)\n  const [books, setBooks] = useState(() => { // books data \n    return JSON.parse(localStorage.getItem(\"books_data\")) !== null ? \n    JSON.parse(localStorage.getItem(\"books_data\")) \n    :\n    []\n  })\n  const [checked, setChecked] = useState(false)\n  const [currentBook, setCurrentBook] = useState({})\n\n  // CRUD operations\n  const addBook = (book) => {\n    book.id = books.length + 1\n    book.isComplete = checked\n    setBooks([...books, book])\n  }\n\n  const deleteBook = (id) => {\n    setBooks(books.filter(book => book.id !== id))\n  }\n\n  const editBook = (book, navigateToEditBook) => {\n    navigateToEditBook()\n    setCurrentBook({\n      id: book.id, \n      title: book.title, \n      author: book.author, \n      year: book.year, \n      isComplete: book.isComplete\n    })\n  }\n\n  const updateBook = (id, updateBook) => {\n    setBooks(books.map(book => (book.id === id ? updateBook : book)))\n  }\n\n  // Update isComplete property value, when uncompleted/complete button clicked\n  const toggleIsComplete = (id, isComplete) => {\n    // setBooks([{isComplete: !isComplete}])\n    setBooks(books => {\n      return books.map(book => book.id === id ? \n        {\n          ...book, // copy obj  \n          isComplete: !isComplete, // update  isComplete property\n        } \n        : \n        book\n      )\n    })\n  }\n\n  useEffect(() => {\n    localStorage.setItem(\"books_data\", JSON.stringify(books))\n    console.log(books)\n  }, [books])\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <header>\n          <AppHeader />\n        </header>\n        {/* <main> */}\n          <Switch>\n            <Route exact path=\"/\">\n              <BookShelf \n                books={books} \n                toggleIsComplete={toggleIsComplete}\n                deleteBook={deleteBook}\n                editBook={editBook}\n              />\n            </Route>\n            <Route path=\"/addbook\">\n              <AddBook \n                books={books}\n                checked={checked}\n                setChecked={setChecked}\n                addBook={addBook}\n              />\n            </Route>\n            <Route path=\"/editbook\">\n              <EditBook \n                currentBook={currentBook}\n                updateBook={updateBook}\n              />\n            </Route>\n          </Switch>\n        {/* </main> */}\n        <footer>\n          <Footer />\n        </footer>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}