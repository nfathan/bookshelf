{"version":3,"sources":["context.js","components/LinkTo.js","components/SubmitButton.js","components/AddBookForm.js","pages/AddBook.js","components/EditBookForm.js","pages/EditBook.js","images/clean-code.jpg","components/Book.js","components/BookListCompleted.js","components/BookListUncompleted.js","components/Loading.js","components/SearchBar.js","pages/BookShelf.js","pages/Home.js","components/AppLogo.js","components/AppHeader.js","components/Footer.js","components/NotFound.js","App.js","index.js"],"names":["AppContext","createContext","AppProvider","children","useState","book","setBook","currentBook","setCurrentBook","checked","setChecked","JSON","parse","localStorage","getItem","books","setBooks","useEffect","setItem","stringify","console","log","Provider","value","useGlobalContext","useContext","LinkTo","props","className","to","innerText","SubmitButton","type","id","AddBookForm","handleInputChange","event","name","target","addBook","length","isComplete","onSubmit","preventDefault","htmlFor","title","onChange","required","author","year","AddBook","EditBookForm","navigate","useNavigate","updateBook","map","EditBook","Book","src","cleanCode","alt","bookTitle","bookAuthor","bookYear","onClick","toggleIsComplete","editBook","deleteBook","BookListCompleted","style","backgroundColor","BookListUncompleted","Loading","SearchBar","setSearch","searchValue","useRef","current","focus","e","placeholder","ref","BookShelf","loading","filter","Home","AppLogo","AppHeader","Footer","href","NotFound","color","display","height","justifyContent","alignItems","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8461ef66.chunk.js","sourcesContent":["import React, { \r\n  createContext, \r\n  // useCallback, \r\n  useContext, \r\n  useEffect, \r\n  useState } from \"react\";\r\n\r\nconst AppContext = createContext()\r\n\r\nconst AppProvider = ({ children }) => {\r\n  // setting state\r\n  const [book, setBook] = useState({})\r\n  const [currentBook, setCurrentBook] = useState({})\r\n  const [checked, setChecked] = useState(false)\r\n  const [books, setBooks] = useState(() => { // books data \r\n    return JSON.parse(localStorage.getItem(\"books_data\")) !== null ? \r\n    JSON.parse(localStorage.getItem(\"books_data\")) \r\n    :\r\n    []\r\n  })\r\n\r\n  // const booksData = JSON.parse(localStorage.getItem(\"books_data\"))\r\n  // const [loading, setLoading] = useState(true)\r\n  // const [search, setSearch] = useState('a')\r\n\r\n  // const searchBook = useCallback( async () => {\r\n  //   setLoading(true)\r\n  //   try {\r\n  //     const data = await booksData.filter(book => book.title.toUpperCase().includes(search.toUpperCase()))\r\n  //     console.log(data)\r\n  //     const { booksList } = data\r\n  //     if(booksList) {\r\n  //       const newBook = booksList.map(item => {\r\n  //         const { \r\n  //           idBook,\r\n  //           titleBook,\r\n  //           authorBook,\r\n  //           yearBook,\r\n  //           iscomplete \r\n  //         } = item \r\n\r\n  //         return {\r\n  //           id: idBook,\r\n  //           title: titleBook,\r\n  //           author: authorBook,\r\n  //           year: yearBook,\r\n  //           isComplete: iscomplete\r\n  //         }\r\n  //       })\r\n  //       setBooks(newBook)\r\n  //     } else {\r\n  //       setBooks([])\r\n  //     }\r\n  //     setLoading(false)\r\n  //   } catch(error) {\r\n  //     console.log(error)\r\n  //     setLoading(false)\r\n  //   }\r\n  // },[search])\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('books_data', JSON.stringify(books))\r\n    console.log(books)\r\n    console.log(currentBook)\r\n  }, [books])\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        book, \r\n        currentBook,\r\n        books, \r\n        checked, \r\n        setBook, \r\n        setCurrentBook,\r\n        setChecked, \r\n        setBooks\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useGlobalContext = () => {\r\n  return useContext(AppContext)\r\n}\r\n\r\nexport {AppContext, AppProvider}","import { Link } from 'react-router-dom'\r\n\r\nfunction LinkTo(props) {\r\n  return (\r\n    <div className=\"LinkTo\">\r\n      <Link \r\n        to={props.to} \r\n        className={props.className}>\r\n          {/* <props.icon /> */}\r\n          {props.innerText}\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LinkTo","function SubmitButton(props) {\r\n  return (\r\n    <div className=\"SubmitButton center\">\r\n      <input \r\n        type=\"submit\" \r\n        id=\"submit\"\r\n        className={props.className}\r\n        value={props.value}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SubmitButton","// import { useState, useEffect } from 'react'\r\nimport { useGlobalContext } from '../context'\r\nimport LinkTo from './LinkTo'\r\nimport SubmitButton from './SubmitButton'\r\n\r\nfunction AddBookForm(props) {\r\n  // Setting state\r\n  // const [book, setBook] = useState({})\r\n  const {\r\n    book,\r\n    books, \r\n    checked,\r\n    setBook,\r\n    setChecked,\r\n    setBooks \r\n  } = useGlobalContext()    \r\n\r\n  // handle inputs change\r\n  const handleInputChange = (event) => {\r\n    const name = event.target.name\r\n    const value = event.target.value\r\n    const checked = event.target.checked\r\n\r\n    setBook({...book, [name]: value})\r\n    setChecked(checked)\r\n  }\r\n\r\n  // handle submit \r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n\r\n    addBook(book)\r\n  }\r\n\r\n  // CRUD operations (add book)\r\n  const addBook = (book) => {\r\n    book.id = books.length + 1\r\n    book.isComplete = checked\r\n    setBooks([...books, book])\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   localStorage.setItem(\"books_data\", JSON.stringify(props.books))\r\n  //   console.log(props.books)\r\n  // }, [props.books])\r\n\r\n  return (\r\n    <form className=\"AddBookForm\" onSubmit={handleSubmit}>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"inputForJudulBuku\">Judul Buku</label>\r\n        <input \r\n          type=\"text\"\r\n          id=\"titleBook\"\r\n          name=\"title\"\r\n          value={book.title || \"\"}\r\n          onChange={handleInputChange}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"inputForPenulis\">Penulis</label>\r\n        <input \r\n          type=\"text\"\r\n          id=\"author\"\r\n          name=\"author\"\r\n          value={book.author || \"\"}\r\n          onChange={handleInputChange}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"inputForTahun\">Tahun</label>\r\n        <input \r\n          type=\"number\"\r\n          id=\"year\"\r\n          name=\"year\"\r\n          value={book.year || \"\"}\r\n          onChange={handleInputChange}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"selesaiDibaca\">Selesai dibaca</label>\r\n        <input \r\n          type=\"checkbox\" \r\n          id=\"completeCheckbox\" \r\n          name=\"isComplete\"\r\n          checked={checked}\r\n          onChange={handleInputChange}\r\n        />\r\n      </div>\r\n      <div className=\"flex jcc\">\r\n        <SubmitButton \r\n          value=\"Tambah Buku Baru\" \r\n          className=\"m-10\"\r\n        />\r\n        <LinkTo \r\n          to=\"/\" \r\n          innerText=\"Home\" \r\n          className=\"cancel m-10\"\r\n        />\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default AddBookForm","import AddBookForm from '../components/AddBookForm'\r\n\r\nfunction AddBook(props) {\r\n  return (\r\n      <div className=\"form-container card shadow-dark container\">\r\n        <h2 className=\"heading\">TAMBAH BUKU</h2>\r\n        <AddBookForm \r\n          // books={props.books}\r\n          // checked={props.checked}\r\n          // setChecked={props.setChecked}\r\n          // addBook={props.addBook}\r\n        />\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default AddBook","import { useNavigate } from 'react-router-dom'\r\n// import { useState } from 'react'\r\nimport { useGlobalContext } from '../context'\r\nimport LinkTo from './LinkTo'\r\nimport SubmitButton from './SubmitButton'\r\n\r\nfunction EditBookForm(props) {\r\n  const {\r\n    currentBook,\r\n    books, \r\n    setCurrentBook,\r\n    setBooks,\r\n  } = useGlobalContext() \r\n  // const [book, setBook] = useState(currentBook)\r\n  let navigate = useNavigate()\r\n  \r\n  const handleInputChange = (event) => {\r\n    const {name, value} = event.target\r\n\r\n    setCurrentBook({...currentBook, [name]: value})\r\n  }\r\n  \r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n\r\n    updateBook(currentBook.id, currentBook)\r\n    navigate(\"/\")\r\n  }\r\n\r\n  // CRUD operations (update book)\r\n  const updateBook = (id, updateBook) => {\r\n    setBooks(books.map(book => (book.id === id ? updateBook : book)))\r\n  }\r\n  \r\n  return (\r\n    <form className=\"AddBookForm\" onSubmit={handleSubmit}>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"inputForJudulBuku\">Judul Buku</label>\r\n        <input \r\n          type=\"text\"\r\n          id=\"titleBook\"\r\n          name=\"title\"\r\n          value={currentBook.title}\r\n          onChange={handleInputChange}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"inputForPenulis\">Penulis</label>\r\n        <input \r\n          type=\"text\"\r\n          id=\"author\"\r\n          name=\"author\"\r\n          value={currentBook.author}\r\n          onChange={handleInputChange}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"inputForTahun\">Tahun</label>\r\n        <input \r\n          type=\"number\"\r\n          id=\"year\"\r\n          name=\"year\"\r\n          value={currentBook.year}\r\n          onChange={handleInputChange}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"selesaiDibaca\">Selesai dibaca</label>\r\n        <input \r\n          type=\"checkbox\" \r\n          id=\"completeCheckbox\" \r\n          name=\"isComplete\"\r\n          checked={currentBook.isComplete}\r\n          onChange={handleInputChange}\r\n        />\r\n      </div>\r\n      <div className=\"flex jcc\">\r\n        <SubmitButton \r\n          value=\"Update Buku\" \r\n          className=\"m-10\"\r\n        />\r\n        <LinkTo \r\n          to=\"/\" \r\n          innerText=\"Kembali\" \r\n          className=\"cancel m-10\"\r\n        />\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default EditBookForm","import EditBookForm from '../components/EditBookForm'\r\n\r\nfunction EditBook(props) {\r\n  return (\r\n      <div className=\"form-container card shadow-dark container\">\r\n        <h2 className=\"heading\">EDIT BUKU</h2>\r\n        <EditBookForm \r\n          // currentBook={props.currentBook}\r\n          // updateBook={props.updateBook}\r\n        />\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default EditBook","export default __webpack_public_path__ + \"static/media/clean-code.9f6cfe0e.jpg\";","// import { useNavigate } from 'react-router-dom'\r\nimport {\r\n  MdOutlineEdit,\r\n  MdDeleteForever,\r\n  MdDoneAll,\r\n  MdRemoveDone } from 'react-icons/md'\r\nimport cleanCode from '../images/clean-code.jpg'\r\n\r\nfunction Book(props) {\r\n  // let navigate = useNavigate()\r\n  \r\n  // const navigateToEditBook = () => {\r\n  //   navigate(\"editbook\")\r\n  // }\r\n  \r\n  return (\r\n    <li className=\"Book shadow\">\r\n      <div className=\"Book-img\">\r\n        \r\n        <img src={cleanCode} alt=\"clean-code\" />\r\n      </div>\r\n      <div className=\"Book-header\">\r\n        <h3>{props.bookTitle}</h3>\r\n        {/* <button onClick={() => navigate(\"/EditBook\")}>Edit</button> */}\r\n        \r\n      </div>\r\n      <div className=\"Book-info\">\r\n        <p>Penulis : {props.bookAuthor}</p>\r\n        <p>Tahun : {props.bookYear}</p>\r\n      </div>\r\n      <div className=\"Book-button center mt-10\">\r\n        {props.isComplete ? \r\n          <button \r\n            className=\"complete-button\" \r\n            onClick={() => props.toggleIsComplete(props.id, props.isComplete)}>\r\n              <MdRemoveDone /> Belum Selesai\r\n          </button>\r\n          : \r\n          <button \r\n            className=\"complete-button\" \r\n            onClick={() => props.toggleIsComplete(props.id, props.isComplete)}>\r\n              <MdDoneAll />Selesai\r\n          </button> \r\n        }\r\n        <button \r\n          className=\"edit-button\"\r\n          onClick={() => props.editBook(props.book)}>\r\n            <MdOutlineEdit />\r\n        </button>\r\n        <button \r\n          className=\"delete-button\"\r\n          onClick={() => props.deleteBook(props.id)}>\r\n            <MdDeleteForever />\r\n        </button>\r\n      </div>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Book ","import Book from './Book'\r\n\r\nfunction BookListCompleted(props) {\r\n  const bgColor = {\r\n    backgroundColor: \"#FFEFA1\"\r\n  }\r\n\r\n  return (\r\n    <div className=\"BookList-container card\" style={bgColor}>\r\n      <h3>Selesai Dibaca</h3> \r\n      <ul id=\"completed\" className=\"BookList\">\r\n        {props.books.map(book => {\r\n          return (\r\n            book.isComplete &&\r\n              <Book \r\n                book={book}\r\n                key={book.id}\r\n                id={book.id}\r\n                bookTitle={book.title} \r\n                bookAuthor={book.author}\r\n                bookYear={book.year}\r\n                isComplete={book.isComplete}\r\n                toggleIsComplete={props.toggleIsComplete}\r\n                deleteBook={props.deleteBook}\r\n                editBook={props.editBook}\r\n              />\r\n            )\r\n          })\r\n        }\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BookListCompleted","// import { useEffect, useState } from \"react\"\r\nimport Book from './Book'\r\n\r\nfunction BookListUncompleted(props) {\r\n  const bgColor = {\r\n    backgroundColor: \"#FFCB91\"\r\n  }\r\n  \r\n  return (\r\n    <div className=\"BookList-container card\" style={bgColor}>\r\n      <h3>Belum Selesai Dibaca</h3> \r\n      <ul id=\"uncompleted\" className=\"BookList\">\r\n        {props.books.map(book => {\r\n          return (\r\n            !book.isComplete &&\r\n              <Book \r\n                book={book}\r\n                key={book.id}\r\n                id={book.id}\r\n                bookTitle={book.title} \r\n                bookAuthor={book.author}\r\n                bookYear={book.year}\r\n                isComplete={book.isComplete}\r\n                toggleIsComplete={props.toggleIsComplete}\r\n                deleteBook={props.deleteBook}\r\n                editBook={props.editBook}\r\n              />\r\n            )\r\n          })\r\n        }\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BookListUncompleted","function Loading() {\r\n  return (\r\n    <div className=\"loader\"></div>\r\n  )\r\n}\r\n\r\nexport default Loading ","import { useEffect, useRef } from \"react\"\r\nimport { useGlobalContext } from \"../context\"\r\n\r\nfunction SearchBar() {\r\n  const { setSearch } = useGlobalContext()\r\n  const searchValue = useRef('')\r\n\r\n  useEffect(() => {\r\n    searchValue.current.focus()\r\n  }, [])\r\n\r\n  const searchBook = () => {\r\n    setSearch(searchValue.current.value)\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"SearchBar\">\r\n        <input \r\n          type=\"search\" \r\n          id=\"inputSearch\"\r\n          placeholder=\"Cari Buku..\"\r\n          ref={searchValue}\r\n          onChange={searchBook}\r\n        />\r\n    </div>\r\n    </form> \r\n  )\r\n}\r\n\r\nexport default SearchBar","// import {TiPlusOutline} from 'react-icons/ti'\r\nimport { useNavigate } from 'react-router'\r\nimport { useGlobalContext } from '../context'\r\nimport BookListCompleted from '../components/BookListCompleted'\r\nimport BookListUncompleted from '../components/BookListUncompleted'\r\nimport LinkTo from '../components/LinkTo'\r\nimport Loading from '../components/Loading'\r\nimport SearchBar from '../components/SearchBar'\r\n\r\nfunction BookShelf(props) {\r\n  const {\r\n    books,\r\n    loading,\r\n    setCurrentBook,\r\n    setBooks\r\n  } = useGlobalContext()\r\n\r\n  let navigate = useNavigate()\r\n\r\n  if(loading) {\r\n    return <Loading />\r\n  }\r\n  if(books.length < 1) {\r\n    return (\r\n      <h2>Tidak ada buku yang cocok dengan kriteria pencarianmu</h2>\r\n    )\r\n  }\r\n\r\n  // Update isComplete property value, when uncompleted/complete button clicked\r\n  const toggleIsComplete = (id, isComplete) => {\r\n    // setBooks([{isComplete: !isComplete}])\r\n    setBooks(books => {\r\n      return books.map(book => book.id === id ? \r\n        {\r\n          ...book, // copy obj  \r\n          isComplete: !isComplete, // update  isComplete property\r\n        } \r\n        : \r\n        book\r\n      )\r\n    })\r\n  }\r\n\r\n  // CRUD operations (delete book, edit book)\r\n  const deleteBook = (id) => {\r\n    setBooks(books.filter(book => book.id !== id))\r\n  }\r\n\r\n  const editBook = (book) => {\r\n    navigate(`editbook/${book.id}`)\r\n    setCurrentBook({\r\n      id: book.id, \r\n      title: book.title, \r\n      author: book.author, \r\n      year: book.year, \r\n      isComplete: book.isComplete\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"BookShelf card shadow-dark container\">\r\n      <h2 className=\"heading mb-20\">RAK BUKU</h2>\r\n      <div className=\"flex jcsb\">\r\n        <SearchBar />\r\n        <LinkTo \r\n          to=\"addbook\" \r\n          className=\"add\" \r\n          // icon={TiPlusOutline}\r\n          innerText=\"Tambah Buku\"\r\n        />\r\n      </div>\r\n      <BookListUncompleted \r\n        books={books} \r\n        toggleIsComplete={toggleIsComplete}\r\n        deleteBook={deleteBook}\r\n        editBook={editBook}\r\n      />\r\n      <BookListCompleted \r\n        books={books} \r\n        toggleIsComplete={toggleIsComplete}\r\n        deleteBook={deleteBook}\r\n        editBook={editBook}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BookShelf","import BookShelf from \"./BookShelf\"\r\n\r\nfunction Home() {\r\n  return (\r\n    <BookShelf />\r\n  )\r\n}\r\n\r\nexport default Home ","import { Link } from 'react-router-dom'\r\n\r\nfunction AppLogo() {\r\n  return (\r\n    <div className=\"App-logo\">\r\n      <h1><Link to=\"/\">BOOKSHELF</Link></h1> \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AppLogo","import AppLogo from './AppLogo'\r\n\r\nfunction AppHeader() {\r\n  return (\r\n    <div className=\"AppHeader\">\r\n      <div className=\"container\">\r\n        <div className=\"AppHeader-logo\">\r\n          <AppLogo />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AppHeader","function Footer() {\r\n  return (\r\n    <div className=\"center\">\r\n      <p>Design and Coded by <a href=\"https://nfathan.github.io/fathan-nasrullah/\">Fathan Nasrullah</a></p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer ","function NotFound () {\r\n  const style = {\r\n    color: 'red',\r\n    display: 'flex',\r\n    height: '300px',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  }\r\n\r\n  return (\r\n    <div style={style}>  \r\n      <h1>404 Not Found</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotFound","// import { \n//   useEffect, \n//   useState \n// } from 'react'\nimport { \n  // BrowserRouter,\n  // HashRouter, \n  Routes, \n  Route,\n  // useNavigate \n} from \"react-router-dom\";\nimport './App.scss';\n// import { useGlobalContext } from './context';\nimport AddBook from './pages/AddBook';\nimport EditBook from './pages/EditBook';\nimport Home from \"./pages/Home\";\nimport AppHeader from './components/AppHeader';\nimport Footer from './components/Footer';\nimport NotFound from './components/NotFound';\n\nfunction App() {\n  // const {\n  //   books, \n  //   setBooks\n  // } = useGlobalContext()\n\n  // Setting state (shared state)\n  // const [books, setBooks] = useState(() => { // books data \n  //   return JSON.parse(localStorage.getItem(\"books_data\")) !== null ? \n  //   JSON.parse(localStorage.getItem(\"books_data\")) \n  //   :\n  //   []\n  // })\n  // const [checked, setChecked] = useState(false)\n  // const [currentBook, setCurrentBook] = useState({})\n\n  // let navigate = useNavigate()\n\n  // CRUD operations\n  // const addBook = (book) => {\n  //   book.id = books.length + 1\n  //   book.isComplete = checked\n  //   setBooks([...books, book])\n  // }\n\n  // const deleteBook = (id) => {\n  //   setBooks(books.filter(book => book.id !== id))\n  // }\n\n  // const editBook = (book) => {\n  //   navigate('editbook')\n  //   setCurrentBook({\n  //     id: book.id, \n  //     title: book.title, \n  //     author: book.author, \n  //     year: book.year, \n  //     isComplete: book.isComplete\n  //   })\n  // }\n\n  // const updateBook = (id, updateBook) => {\n  //   setBooks(books.map(book => (book.id === id ? updateBook : book)))\n  // }\n\n  // Update isComplete property value, when uncompleted/complete button clicked\n  // const toggleIsComplete = (id, isComplete) => {\n  //   // setBooks([{isComplete: !isComplete}])\n  //   setBooks(books => {\n  //     return books.map(book => book.id === id ? \n  //       {\n  //         ...book, // copy obj  \n  //         isComplete: !isComplete, // update  isComplete property\n  //       } \n  //       : \n  //       book\n  //     )\n  //   })\n  // }\n\n  // useEffect(() => {\n  //   localStorage.setItem(\"books_data\", JSON.stringify(books))\n  //   console.log(books)\n  // }, [books])\n\n  return (\n    <div className=\"App\">\n      <header>\n        <AppHeader />\n      </header>\n      <main>\n        <Routes>\n          <Route path=\"/\" element={\n            <Home \n              // books={books} \n              // toggleIsComplete={toggleIsComplete}\n              // deleteBook={deleteBook}\n              // editBook={editBook}\n            />\n          } \n          />\n          <Route path=\"addbook\" element={\n            <AddBook \n              // books={books}\n              // checked={checked}\n              // setChecked={setChecked}\n              // addBook={addBook}\n            />} \n          />\n          <Route path=\"editbook/:bookId\" element={\n            <EditBook \n              // currentBook={currentBook}\n              // updateBook={updateBook}\n            />}\n          />\n          <Route path=\"*\" element={<NotFound />} />\n        </Routes>\n      </main>\n      <footer>\n        <Footer />\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { \n  // BrowserRouter, \n  HashRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport { AppProvider } from './context';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <AppProvider>\n        <App />\n      </AppProvider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}